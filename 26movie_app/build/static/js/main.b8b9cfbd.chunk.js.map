{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","rank","movieNm","poster","className","src","alt","title","App","state","isLoading","today","week","movies","onChange","e","a","setState","date","target","value","Dt","String","replace","axios","get","boxOfficeResult","data","weeklyBoxOfficeList","forEach","element","movieCd","yearWeekTime","slice","getMovies","Date","date2","getTime","setTime","getFullYear","getMonth","getDate","this","type","max","map","movie","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAmBeA,MAhBf,YAAwC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,OAC3B,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAIA,UAAU,cAAd,UAA6BH,EAA7B,YACA,oBAAIG,UAAU,eAAd,SAA8BF,IAC9B,qBAAKE,UAAU,gBAAgBC,IAAKF,EAAQG,IAAKJ,EAASK,MAAOL,QCHnEM,E,4MACJC,MAAQ,CACNC,WAAW,EACXC,MAAO,GACPC,KAAM,GACNC,OAAQ,I,EAKVC,S,uCAAW,WAAOC,GAAP,uBAAAC,EAAA,6DACT,EAAKC,SAAS,CAACP,WAAW,IACpBQ,EAAOH,EAAEI,OAAOC,MAChBC,EAAKC,OAAOJ,GAAMK,QAAQ,MAAO,IAH9B,SAMCC,IAAMC,IAAN,kJAAqJJ,IANtJ,iBAKCK,EALD,EAKPC,KAAQD,iBAEME,oBAAoBC,SAAQ,SAAAC,GAC1CA,EAAQ3B,OAAR,kDAA4D2B,EAAQC,QAApE,gBAEInB,EAVG,UAUOc,EAAgBM,aAAaC,MAAM,EAAG,GAV7C,kBAUoDP,EAAgBM,aAAaC,MAAM,GAVvF,iBAWT,EAAKhB,SAAS,CAACJ,OAAQa,EAAgBE,oBAAqBhB,OAAMF,WAAW,IAXpE,4C,wDAcXwB,U,sBAAY,oCAAAlB,EAAA,6DACJE,EAAO,IAAIiB,KACXC,EAAQlB,EAAKmB,UAAa,OAChCnB,EAAKoB,QAAQF,GACPf,EAAKH,EAAKqB,eAAiB,KAAOrB,EAAKsB,WAAW,IAAIP,OAAO,IAAM,IAAMf,EAAKuB,WAAWR,OAAO,GAJ5F,SASAT,IAAMC,IAAN,kJAAqJJ,IATrJ,iBAOaO,EAPb,EAMRD,KACED,gBAAmBE,qBAGHC,SAAQ,SAAAC,GAC1BA,EAAQ3B,OAAR,kDAA4D2B,EAAQC,QAApE,gBAEF,EAAKd,SAAS,CAACJ,OAAQe,EAAqBjB,MAAM,GAAD,OAAKO,EAAKqB,cAAgB,KAAO,KAAOrB,EAAKsB,WAAW,IAAIP,OAAO,GAAK,KAAO,IAAMf,EAAKuB,WAAWR,OAAO,IAAKrB,KAAM,gBAAOF,WAAW,IAbhL,4C,uDAgBZ,WACEgC,KAAKR,c,oBAGP,WACE,MAA2CQ,KAAKjC,MAAxCC,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,OAAQD,EAA3B,EAA2BA,KAAMD,EAAjC,EAAiCA,MACjC,OACE,sBAAKP,UAAU,YAAf,UACE,uBAAOuC,KAAK,OAAOC,IAAKjC,EAAOG,SAAU4B,KAAK5B,WAC9C,+BAAKF,EAAL,+DACCF,EAEG,qBAAKN,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAIF,qBAAKA,UAAU,SAAf,SACGS,EAAOgC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,CAEE7C,KAAM6C,EAAM7C,KACZC,QAAS4C,EAAM5C,QACfC,OAAQ2C,EAAM3C,QAHT2C,EAAM7C,kB,GA5DX8C,IAAMC,WA2ETxC,IC3EfyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b8b9cfbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Movie({rank, movieNm, poster}){\r\n    return <div className=\"movie\">\r\n        <h2 className=\"movie__rank\">{rank}위</h2>        \r\n        <h1 className=\"movie__title\">{movieNm}</h1>\r\n        <img className=\"movie__poster\" src={poster} alt={movieNm} title={movieNm}/>\r\n\r\n    </div>\r\n    \r\n}\r\n\r\nMovie.propTypes = {\r\n    rank: PropTypes.string.isRequired,\r\n    movieNm: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    today: \"\",\n    week: \"\",\n    movies: []\n  };\n\n\n\n  onChange = async (e) => {\n    this.setState({isLoading: true});\n    const date = e.target.value;\n    const Dt = String(date).replace(/-/gi, \"\");\n    const {\n      data: { boxOfficeResult }\n    } = await axios.get(`https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.json?key=52d6b26b7077c87da340d932eb3d4d85&targetDt=${Dt}`);\n    boxOfficeResult.weeklyBoxOfficeList.forEach(element => {\n      element.poster = `https://file.cineq.co.kr/i.aspx?movieid=${element.movieCd}&size=210`;\n    });\n    const week = `${boxOfficeResult.yearWeekTime.slice(0, 4)}년 ${boxOfficeResult.yearWeekTime.slice(4)}주차 `;\n    this.setState({movies: boxOfficeResult.weeklyBoxOfficeList, week, isLoading: false});\n  }\n\n  getMovies = async () => {\n    const date = new Date();\n    const date2 = date.getTime() - (7 * 24 * 60 * 60 * 1000);\n    date.setTime(date2);\n    const Dt = date.getFullYear() + (\"0\" + (date.getMonth()+1)).slice(-2) + (\"0\" + date.getDate()).slice(-2);\n    const {\n      data: {\n        boxOfficeResult: { weeklyBoxOfficeList }\n      }\n    } = await axios.get(`https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.json?key=52d6b26b7077c87da340d932eb3d4d85&targetDt=${Dt}`);\n    weeklyBoxOfficeList.forEach(element => {\n      element.poster = `https://file.cineq.co.kr/i.aspx?movieid=${element.movieCd}&size=210`;\n    });\n    this.setState({movies: weeklyBoxOfficeList, today: `${date.getFullYear() + \"-\" + (\"0\" + (date.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + date.getDate()).slice(-2)}`,week: \"지난 \", isLoading: false});\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    const { isLoading, movies, week, today } = this.state;\n    return (\n      <div className=\"container\">\n        <input type=\"date\" max={today} onChange={this.onChange} />\n        <h1>{week} 주말 박스오피스 순위</h1>\n        {isLoading \n          ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          )\n          : (\n            <div className=\"movies\">\n              {movies.map(movie => (\n                <Movie \n                  key={movie.rank}\n                  rank={movie.rank} \n                  movieNm={movie.movieNm} \n                  poster={movie.poster} \n                />\n              ))}\n            </div>\n            \n          )}\n      </div>\n    );\n  }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}